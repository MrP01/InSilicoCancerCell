---
import * as Plot from "@observablehq/plot";
import { JSDOM } from "jsdom";
import { generatePlot } from "../plots";

const { plot, args, extra } = Astro.props;
const jsdom = new JSDOM();
const fontSize = extra ? extra["fontSize"] || false : false;
const staticPlot = Plot.plot({
  ...(await generatePlot(plot, args)),
  ...extra,
  style: "--plot-background: black; " + (fontSize ? `font-size: ${fontSize}px` : ""),
  document: jsdom.window._document,
});
---

<astro-figure data-plot={plot} data-args={JSON.stringify(args)} data-extra={JSON.stringify(extra)}>
  <Fragment set:html={staticPlot.outerHTML} />
</astro-figure>

<script>
  import * as Plot from "@observablehq/plot";
  import { generatePlot } from "../plots";

  class AstroFigure extends HTMLElement {
    constructor() {
      super();
      const extras = JSON.parse(this.dataset.extra || "{}");
      const fontSize = extras["fontSize"] || false;
      // this.innerHTML = "Loading...";
      generatePlot(this.dataset.plot, JSON.parse(this.dataset.args || "[]"), true).then((generatedPlot) => {
        this.innerHTML = "";
        this.appendChild(
          Plot.plot({
            ...generatedPlot,
            ...extras,
            style: "--plot-background: black; " + (fontSize ? `font-size: ${fontSize}px` : ""),
          })
        );
      });
      console.log(`In-place replacement of ${this.dataset.plot} succeeded.`);
    }
  }
  customElements.define("astro-figure", AstroFigure);
</script>
