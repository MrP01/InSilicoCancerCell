---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Figure from "../components/Figure.astro";
import IonChannel from "../components/IonChannel.astro";
import { get_cell_metadata } from "../pkg/in_silico_frontend";

const metadata = get_cell_metadata();
---

<Layout title="Elecrophysiological Model of a Cancer Cell">
  <main>
    <h1><span class="text-gradient">In-Silico</span> Cancer Cell</h1>
    <!-- <p class="instructions">Welcome! ðŸš€ This is the full simulation output:</p> -->
    <div class="channel-grid">
      <IonChannel channel="Kv71" metadata={metadata} />
      <IonChannel channel="CRACM1" metadata={metadata} />
      <IonChannel channel="Kv13" metadata={metadata} />
      <IonChannel channel="Kv31" metadata={metadata} />
      <IonChannel channel="Kv34" metadata={metadata} />
      <IonChannel channel="KCa11" metadata={metadata} />
      <IonChannel channel="KCa31" metadata={metadata} />
      <IonChannel channel="CLC2" metadata={metadata} />
      <IonChannel channel="Task1" metadata={metadata} />
    </div>
    <Figure
      plot="fullSimulationCurrent"
      extra={{
        width: 1800,
        height: 300,
      }}
    />
    <!-- <img
      src="https://journals.plos.org/ploscompbiol/article/figure/image?size=large&download=&id=10.1371/journal.pcbi.1009091.g002"
      width="100%"
      style="margin: 20px 0"
    /> -->
    <ul role="list" class="link-card-grid">
      <Card
        href="https://github.com/MrP01/InSilicoCancerCell"
        title="Simulation: Source Code"
        body="Explore the source code of this simulation."
      />
      <Card
        href="https://www.tugraz.at/en/institutes/hce/home"
        title="Institute: HCE"
        body="Developed at the Institute of Health Care Engineering with European Testing Center of Medical Devices"
      />
      <Card href="https://www.tugraz.at/" title="Place: TU Graz" body="Part of the Technical University of Graz." />
    </ul>
  </main>
</Layout>

<style>
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
  .channel-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(40ch, 2fr));
  }
</style>
